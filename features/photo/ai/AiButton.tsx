import { useMemo } from 'react';
import { HiSparkles } from 'react-icons/hi';

import LoaderButton from '@/components/primitives/LoaderButton';

import { AiAutoGeneratedField, ALL_AI_AUTO_GENERATED_FIELDS } from '.';
import { AiContent } from './useAiImageQueries';

export default function AiButton({
  aiContent,
  requestFields = ALL_AI_AUTO_GENERATED_FIELDS,
  shouldConfirm,
  className,
}: {
  aiContent: AiContent;
  requestFields?: AiAutoGeneratedField[];
  shouldConfirm?: boolean;
  className?: string;
}) {
  const isLoading = useMemo(
    () =>
      (requestFields ?? [])
        .map((field) => {
          switch (field) {
            case 'title':
              return aiContent.isLoadingTitle;
            case 'caption':
              return aiContent.isLoadingCaption;
            case 'tags':
              return aiContent.isLoadingTags;
            case 'semantic':
              return aiContent.isLoadingSemantic;
            default:
              return false;
          }
        })
        .some(Boolean),
    [
      requestFields,
      aiContent.isLoadingCaption,
      aiContent.isLoadingSemantic,
      aiContent.isLoadingTags,
      aiContent.isLoadingTitle,
    ]
  );

  return (
    <LoaderButton
      icon={<HiSparkles size={16} />}
      className={className}
      onClick={(e) => {
        if (
          !shouldConfirm ||
          confirm('Are you sure you want to overwrite existing content?')
        ) {
          aiContent.request(requestFields);
        } else {
          e.preventDefault();
        }
      }}
      isLoading={isLoading}
    />
  );
}
